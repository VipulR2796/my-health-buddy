/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.SystemAdmin;

import Model.Account.AccountDirectory;
import java.sql.Connection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import Model.Database.DBconnection;
import Model.People.DietitianDirectory;
import Model.People.User;
import Model.People.UserDirectory;
import Model.Utilities.UtilityFunctions;
import UI.Authenticate.LoginFrame;


import UI.Main.MainFrame;
import UI.SystemAdmin.ManageGroceryStoresSA;
import UI.SystemAdmin.ManageMealServiceSA;
import UI.SystemAdmin.SAHomePage;
import java.awt.Color;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author vipul
 */
public class ManageUsersSA extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    UserDirectory records = new UserDirectory();
    private TableRowSorter sorter;
    public ManageUsersSA() {
        initComponents();
        //this.records = records;
        
        populateTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupGender = new javax.swing.ButtonGroup();
        btnGroupDiabetes = new javax.swing.ButtonGroup();
        pnlTitleBar = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pnlWorkArea = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        pnlRegistration = new javax.swing.JPanel();
        panelMedical = new javax.swing.JPanel();
        txtHeight = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        comboDiabetic = new javax.swing.JComboBox<>();
        lblDiabetes = new javax.swing.JLabel();
        lblAllergies = new javax.swing.JLabel();
        txtAllergies = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        panelDiet = new javax.swing.JPanel();
        lblPurpose = new javax.swing.JLabel();
        lblPreference = new javax.swing.JLabel();
        comboPreference = new javax.swing.JComboBox<>();
        lblWorkoutFrequency = new javax.swing.JLabel();
        comboWorkoutFrequency = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listFavorites = new javax.swing.JList<>();
        lblFavFood = new javax.swing.JLabel();
        comboPurpose = new javax.swing.JComboBox<>();
        panelDiet1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        pwdRePassword = new javax.swing.JPasswordField();
        pwdPassword = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        panelMedical1 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        comboGender = new javax.swing.JComboBox<>();
        lblBloodGroup = new javax.swing.JLabel();
        lblWeight2 = new javax.swing.JLabel();
        lblDiabetes2 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        lblHeight2 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblAllergies2 = new javax.swing.JLabel();
        dateDOB = new com.toedter.calendar.JDateChooser();
        pnlView = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableView = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        panelMedicalUpdate = new javax.swing.JPanel();
        txtHeight1 = new javax.swing.JTextField();
        lblWeight1 = new javax.swing.JLabel();
        comboDiabetic1 = new javax.swing.JComboBox<>();
        lblDiabetes1 = new javax.swing.JLabel();
        lblAllergies1 = new javax.swing.JLabel();
        txtAllergies1 = new javax.swing.JTextField();
        txtWeight1 = new javax.swing.JTextField();
        lblHeight1 = new javax.swing.JLabel();
        panelDietUpdate = new javax.swing.JPanel();
        lblPurpose1 = new javax.swing.JLabel();
        comboPreference1 = new javax.swing.JComboBox<>();
        comboWorkoutFrequency1 = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        listFavorites1 = new javax.swing.JList<>();
        comboPurpose1 = new javax.swing.JComboBox<>();
        lblPreference2 = new javax.swing.JLabel();
        lblWorkoutFrequency2 = new javax.swing.JLabel();
        lblFavFood2 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        pnlSideOptions = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lblStore = new javax.swing.JLabel();
        lblService = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(66, 179, 172));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlTitleBar.setBackground(new java.awt.Color(100, 129, 152));

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/icons8_menu_48px_1.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/male_user_50px.png"))); // NOI18N
        jLabel4.setText("Welcome, System Admin");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Diet Management System");

        jLabel3.setFont(new java.awt.Font("Segoe UI Symbol", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("X");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlTitleBarLayout = new javax.swing.GroupLayout(pnlTitleBar);
        pnlTitleBar.setLayout(pnlTitleBarLayout);
        pnlTitleBarLayout.setHorizontalGroup(
            pnlTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleBarLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 575, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18))
            .addGroup(pnlTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTitleBarLayout.createSequentialGroup()
                    .addContainerGap(732, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addGap(59, 59, 59)))
        );
        pnlTitleBarLayout.setVerticalGroup(
            pnlTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleBarLayout.createSequentialGroup()
                .addGroup(pnlTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTitleBarLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(pnlTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlTitleBarLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(pnlTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlTitleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTitleBarLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addContainerGap()))
        );

        getContentPane().add(pnlTitleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 60));

        pnlWorkArea.setBackground(new java.awt.Color(255, 255, 255));
        pnlWorkArea.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabbedPane.setBackground(new java.awt.Color(255, 51, 51));
        tabbedPane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabbedPane.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        tabbedPane.setName(""); // NOI18N

        pnlRegistration.setBackground(new java.awt.Color(255, 255, 255));
        pnlRegistration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelMedical.setBackground(new java.awt.Color(255, 255, 255, 180));
        panelMedical.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Health", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelMedical.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHeightKeyTyped(evt);
            }
        });
        panelMedical.add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 200, 30));

        lblWeight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/weight_px.png"))); // NOI18N
        lblWeight.setText("         Weight:");
        panelMedical.add(lblWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        comboDiabetic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        comboDiabetic.setSelectedIndex(-1);
        panelMedical.add(comboDiabetic, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 200, 30));

        lblDiabetes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-diabetes-32.png"))); // NOI18N
        lblDiabetes.setText("       Diabetes:");
        panelMedical.add(lblDiabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 120, -1));

        lblAllergies.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-allergies-29.png"))); // NOI18N
        lblAllergies.setText(" Any Allergies:");
        panelMedical.add(lblAllergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, -1, -1));

        txtAllergies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAllergiesKeyTyped(evt);
            }
        });
        panelMedical.add(txtAllergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 200, 30));

        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtWeightKeyTyped(evt);
            }
        });
        panelMedical.add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 200, 30));

        lblHeight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/height_29px.png"))); // NOI18N
        lblHeight.setText("          Height:");
        panelMedical.add(lblHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 110, -1));

        pnlRegistration.add(panelMedical, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 751, 100));

        btnRegister.setBackground(new java.awt.Color(255, 51, 51));
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        pnlRegistration.add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 550, 95, 30));

        btnClear.setBackground(new java.awt.Color(255, 51, 51));
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlRegistration.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 550, 81, 30));

        panelDiet.setBackground(new java.awt.Color(255, 255, 255, 180));
        panelDiet.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Diet Related", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelDiet.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPurpose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-diet-29 (1).png"))); // NOI18N
        lblPurpose.setText("Purpose of Diet:");
        panelDiet.add(lblPurpose, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        lblPreference.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/meals/icons8-meal-29.png"))); // NOI18N
        lblPreference.setText("Food Preference:");
        panelDiet.add(lblPreference, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, -1));

        comboPreference.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vegeterian", "Non-Vegeterian", "Eggiterian", "Vegan" }));
        comboPreference.setSelectedIndex(-1);
        comboPreference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPreferenceActionPerformed(evt);
            }
        });
        panelDiet.add(comboPreference, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 200, 30));

        lblWorkoutFrequency.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-deadlift-29.png"))); // NOI18N
        lblWorkoutFrequency.setText("Workout Frequency:");
        panelDiet.add(lblWorkoutFrequency, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, -1));

        comboWorkoutFrequency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Never", "Rarely", "Once in a week", "Frequent" }));
        comboWorkoutFrequency.setSelectedIndex(-1);
        comboWorkoutFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboWorkoutFrequencyActionPerformed(evt);
            }
        });
        panelDiet.add(comboWorkoutFrequency, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 200, 30));

        listFavorites.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Avacados", "Banana", "Eggs White", "Beans", "Whole Eggs", "Milk (Low Fat)", "Milk (Whole)", "Milk (Almond)", "Cottage Cheese", "Tofu", "Yogurt (No Sugar)", "Yogurt (With Sugar)", "Chicken", "Beaf", "Pork", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listFavorites.setDragEnabled(true);
        listFavorites.setDropMode(javax.swing.DropMode.ON);
        jScrollPane3.setViewportView(listFavorites);

        panelDiet.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 200, 60));

        lblFavFood.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-favourites-29.png"))); // NOI18N
        lblFavFood.setText("           Favorites:");
        panelDiet.add(lblFavFood, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, -1, -1));

        comboPurpose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Diebetes Control", "BP Control", "Cholestrol Control", "Weight Loss", "Weight Gain", "Core Strengthening" }));
        comboPurpose.setSelectedIndex(-1);
        panelDiet.add(comboPurpose, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 200, 30));

        pnlRegistration.add(panelDiet, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 751, 140));

        panelDiet1.setBackground(new java.awt.Color(255, 255, 255, 180));
        panelDiet1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Account Related", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelDiet1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/icons/icons8-password-30.png"))); // NOI18N
        jLabel6.setText("Confirm Password");
        panelDiet1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, -1, -1));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        panelDiet1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 200, 30));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/icons/mail_30px.png"))); // NOI18N
        jLabel15.setText("Email ID");
        panelDiet1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));
        panelDiet1.add(pwdRePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 190, 30));
        panelDiet1.add(pwdPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 190, 30));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/icons/icons8-password-30.png"))); // NOI18N
        jLabel16.setText("Password");
        panelDiet1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, -1, -1));

        pnlRegistration.add(panelDiet1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 751, 110));

        panelMedical1.setBackground(new java.awt.Color(255, 255, 255, 180));
        panelMedical1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelMedical1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });
        panelMedical1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 200, 30));

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Non-Binary", "Prefer not to say" }));
        comboGender.setSelectedIndex(-1);
        panelMedical1.add(comboGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 200, 30));

        lblBloodGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-male-and-female-29.png"))); // NOI18N
        lblBloodGroup.setText("           Gender");
        panelMedical1.add(lblBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        lblWeight2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-contact-29.png"))); // NOI18N
        lblWeight2.setText("  Phone");
        panelMedical1.add(lblWeight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        lblDiabetes2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/icons/icons8-birth-date-30.png"))); // NOI18N
        lblDiabetes2.setText("Date of Birth");
        panelMedical1.add(lblDiabetes2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, -1));

        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactKeyTyped(evt);
            }
        });
        panelMedical1.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 190, 30));

        lblHeight2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-name-tag-29.png"))); // NOI18N
        lblHeight2.setText("             Name");
        panelMedical1.add(lblHeight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 110, -1));

        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });
        panelMedical1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 190, 30));

        lblAllergies2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-home-address-29 (1).png"))); // NOI18N
        lblAllergies2.setText(" Address");
        panelMedical1.add(lblAllergies2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));
        panelMedical1.add(dateDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 200, 30));

        pnlRegistration.add(panelMedical1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 750, 140));

        tabbedPane.addTab("Registration", pnlRegistration);

        pnlView.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        pnlView.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 318, 28));

        tableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Age", "Contact", "Address", "Height(cm)", "Weight(lbs)", "Diabetes", "Allergies"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Long.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableView);

        pnlView.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 770, 90));

        btnUpdate.setBackground(new java.awt.Color(255, 51, 51));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlView.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 520, 102, 35));

        panelMedicalUpdate.setBackground(new java.awt.Color(255, 255, 255, 180));
        panelMedicalUpdate.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Health", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelMedicalUpdate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHeight1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHeight1KeyTyped(evt);
            }
        });
        panelMedicalUpdate.add(txtHeight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 200, 30));

        lblWeight1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/weight_px.png"))); // NOI18N
        lblWeight1.setText("         Weight:");
        panelMedicalUpdate.add(lblWeight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        comboDiabetic1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        comboDiabetic1.setSelectedIndex(-1);
        panelMedicalUpdate.add(comboDiabetic1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 210, 30));

        lblDiabetes1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-diabetes-32.png"))); // NOI18N
        lblDiabetes1.setText("       Diabetes:");
        panelMedicalUpdate.add(lblDiabetes1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 120, -1));

        lblAllergies1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-allergies-29.png"))); // NOI18N
        lblAllergies1.setText(" Any Allergies:");
        panelMedicalUpdate.add(lblAllergies1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        txtAllergies1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAllergies1KeyTyped(evt);
            }
        });
        panelMedicalUpdate.add(txtAllergies1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, 210, 40));

        txtWeight1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtWeight1KeyTyped(evt);
            }
        });
        panelMedicalUpdate.add(txtWeight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 200, 30));

        lblHeight1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/height_29px.png"))); // NOI18N
        lblHeight1.setText("          Height:");
        panelMedicalUpdate.add(lblHeight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 110, -1));

        pnlView.add(panelMedicalUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 770, 160));

        panelDietUpdate.setBackground(new java.awt.Color(255, 255, 255, 180));
        panelDietUpdate.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Diet Related", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 3, 10))); // NOI18N
        panelDietUpdate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPurpose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-diet-29 (1).png"))); // NOI18N
        lblPurpose1.setText("Purpose of Diet:");
        panelDietUpdate.add(lblPurpose1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        comboPreference1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vegeterian", "Non-Vegeterian", "Eggiterian", "Vegan" }));
        comboPreference1.setSelectedIndex(-1);
        comboPreference1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPreference1ActionPerformed(evt);
            }
        });
        panelDietUpdate.add(comboPreference1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 210, 40));

        comboWorkoutFrequency1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Never", "Rarely", "Once in a week", "Frequent" }));
        comboWorkoutFrequency1.setSelectedIndex(-1);
        comboWorkoutFrequency1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboWorkoutFrequency1ActionPerformed(evt);
            }
        });
        panelDietUpdate.add(comboWorkoutFrequency1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 200, 40));

        listFavorites1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Avacados", "Banana", "Eggs White", "Beans", "Whole Eggs", "Milk (Low Fat)", "Milk (Whole)", "Milk (Almond)", "Cottage Cheese", "Tofu", "Yogurt (No Sugar)", "Yogurt (With Sugar)", "Chicken", "Beaf", "Pork", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listFavorites1.setDragEnabled(true);
        listFavorites1.setDropMode(javax.swing.DropMode.ON);
        jScrollPane5.setViewportView(listFavorites1);

        panelDietUpdate.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 110, 210, 70));

        comboPurpose1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Diebetes Control", "BP Control", "Cholestrol Control", "Weight Loss", "Weight Gain", "Core Strengthening" }));
        comboPurpose1.setSelectedIndex(-1);
        panelDietUpdate.add(comboPurpose1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 200, 40));

        lblPreference2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/meals/icons8-meal-29.png"))); // NOI18N
        lblPreference2.setText("Food Preference:");
        panelDietUpdate.add(lblPreference2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, -1, -1));

        lblWorkoutFrequency2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-deadlift-29.png"))); // NOI18N
        lblWorkoutFrequency2.setText("Workout Frequency:");
        panelDietUpdate.add(lblWorkoutFrequency2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, -1, -1));

        lblFavFood2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/userIcons/icons8-favourites-29.png"))); // NOI18N
        lblFavFood2.setText("           Favorites:");
        panelDietUpdate.add(lblFavFood2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        pnlView.add(panelDietUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 770, 200));

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        pnlView.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, 102, 35));

        tabbedPane.addTab("Modifications", pnlView);

        pnlWorkArea.add(tabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, -9, 820, 620));

        getContentPane().add(pnlWorkArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 63, 810, 610));

        pnlSideOptions.setBackground(new java.awt.Color(51, 51, 51));
        pnlSideOptions.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(192, 202, 97));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/icons8_Exit_26px_2.png"))); // NOI18N
        jLabel1.setText("   Logout");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel6.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 150, -1));

        pnlSideOptions.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 190, 45));

        jPanel7.setBackground(new java.awt.Color(255, 51, 51));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(255, 51, 51));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/icons8_Home_26px_2.png"))); // NOI18N
        jLabel8.setText("  Home Page");
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 150, -1));

        jPanel7.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 190, 45));

        jPanel9.setBackground(new java.awt.Color(255, 51, 51));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/icons8_Home_26px_2.png"))); // NOI18N
        jLabel9.setText("  Home Page");
        jPanel9.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 150, -1));

        jPanel10.setBackground(new java.awt.Color(255, 51, 51));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/icons8_Home_26px_2.png"))); // NOI18N
        jLabel10.setText("  Home Page");
        jPanel10.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 150, -1));

        jPanel9.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 190, 45));

        jPanel7.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 190, 45));

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/users_sadmin_29px.png"))); // NOI18N
        jLabel12.setText(" Manage Users");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, -1));

        pnlSideOptions.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 190, 45));

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/Icon-Small.png"))); // NOI18N
        jLabel13.setText(" Manage Dietitians");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        pnlSideOptions.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 170, -1));

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/Icon-Small_1.png"))); // NOI18N
        jLabel14.setText(" Manage Hospitals");
        pnlSideOptions.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 170, -1));

        jPanel11.setBackground(new java.awt.Color(51, 51, 51));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/icons8_Home_26px_2.png"))); // NOI18N
        jLabel11.setText("  Home Page");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        jPanel11.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, -1));

        pnlSideOptions.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 190, 45));

        lblStore.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        lblStore.setForeground(new java.awt.Color(255, 255, 255));
        lblStore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/product_sadmin_29px.png"))); // NOI18N
        lblStore.setText(" Manage Stores");
        pnlSideOptions.add(lblStore, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 180, -1));

        lblService.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        lblService.setForeground(new java.awt.Color(255, 255, 255));
        lblService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/adminIcons/adminIcons/product_sadmin_29px.png"))); // NOI18N
        lblService.setText(" Manage Services");
        pnlSideOptions.add(lblService, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 180, -1));

        getContentPane().add(pnlSideOptions, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 190, 620));

        setSize(new java.awt.Dimension(1014, 673));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    

public void resetUpdateForm(){
        
//        txtName.setText(null);
//        dateDOB.setDate(null);
//        txtAge.setText(null);
//        txtContact.setText(null);
//        comboGender.setSelectedIndex(-1);
//        txtAddress.setText(null);
        
        txtHeight1.setText(null);
        txtWeight1.setText(null);
        comboDiabetic1.setSelectedIndex(-1);
        txtAllergies1.setText(null);
       
        comboPurpose1.setSelectedIndex(-1);
        listFavorites1.setSelectedIndex(-1);
        comboPreference1.setSelectedIndex(-1);
        comboWorkoutFrequency1.setSelectedIndex(-1);
         
    }

    public void resetForm(){
        
        txtName.setText(null);
        dateDOB.setDate(null);
        txtContact.setText(null);
        comboGender.setSelectedIndex(-1);
        txtAddress.setText(null);
        
        txtHeight.setText(null);
        txtWeight.setText(null);
        comboDiabetic.setSelectedIndex(-1);
        txtAllergies.setText(null);
       
        comboPurpose.setSelectedIndex(-1);
        listFavorites.setSelectedIndex(-1);
        comboPreference.setSelectedIndex(-1);
        comboWorkoutFrequency.setSelectedIndex(-1);
        
        txtEmail.setText(null);
        pwdPassword.setText(null);
        pwdRePassword.setText(null);
         
        txtEmail.setText(null);
        pwdPassword.setText(null);
        pwdRePassword.setText(null);
         
    }
    
    
    public LocalDate convertToLocalDateViaInstant(Date dateToConvert) {
        return dateToConvert.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    }
    
    
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        
        if (txtName.getText().isEmpty()|| 
            txtAddress.getText().isEmpty()||
            txtAllergies.getText().isEmpty() || 
            txtContact.getText().isEmpty() || 
            txtHeight.getText().isEmpty() || 
            txtWeight.getText().isEmpty() ||
            txtEmail.getText().isEmpty() ||
            comboGender.getSelectedIndex() == -1 ||
            dateDOB.getDate() == null    || 
            comboDiabetic.getSelectedIndex() == -1 ||    
            comboPurpose.getSelectedIndex() == -1 ||
            comboPreference.getSelectedIndex() == -1 ||
            comboWorkoutFrequency.getSelectedIndex() == -1
                
            )
        {
            JOptionPane.showMessageDialog(this,
                    "Please enter all fields",
                    "Try Again",
                    JOptionPane.ERROR_MESSAGE); 
            
        }
        else{
            //Personal Info
            String name = txtName.getText();
            Date dob = dateDOB.getDate();
            LocalDate today = LocalDate.now();
            int age = Period.between(convertToLocalDateViaInstant(dob), today).getYears();
            String gender = comboGender.getSelectedItem().toString();
            long contact = Long.parseLong(txtContact.getText());
           
           //Address
           String address = txtAddress.getText();
           
           //Health details
           float height = Float.parseFloat(txtHeight.getText());
           float weight = Float.parseFloat(txtWeight.getText());
           boolean diabetic;
           
           
           if(comboDiabetic.getSelectedItem().toString().equals("Yes"))
           {
               diabetic = true;
           }
           else{
               diabetic = false;
           }
           
           String allergies = txtAllergies.getText();
           
           //Diet Info
           String puposeList = comboPurpose.getSelectedItem().toString();
           String preference = comboPreference.getSelectedItem().toString();
           String workoutFrequency = comboWorkoutFrequency.getSelectedItem().toString();
           List<String> favorites = listFavorites.getSelectedValuesList();
           
           String email = txtEmail.getText();
           String password =new String(pwdPassword.getPassword());
           String confirmpassword = new String(pwdRePassword.getPassword());

         
        
        if (email.equals("Enter Email") || password.equals("Enter Password") 
                || confirmpassword.equals("Confirm Password") )
        {
            JOptionPane.showMessageDialog(this, "Please fill all the fields!");
        }
       // else if(comboDiabetic.)
        else if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", email))) 
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter a valid email",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else if((Long.toString(contact)).length()<10){
            JOptionPane.showMessageDialog(this,
                    "Please enter valid 10 digits Contact No.",
                    "Try Again",
                    JOptionPane.ERROR_MESSAGE);
           
        }
        else if(!(Pattern.matches("^[1-9]\\d*(\\.\\d+)?$", (Float.toString(height)))))
                {
                     JOptionPane.showMessageDialog(this,
                    "Please enter valid Height",
                    "Try Again",
                    JOptionPane.ERROR_MESSAGE);
        }
        
         else if(!(Pattern.matches("^[1-9]\\d*(\\.\\d+)?$", (Float.toString(weight)))))
                {
                     JOptionPane.showMessageDialog(this,
                    "Please enter valid Weight",
                    "Try Again",
                    JOptionPane.ERROR_MESSAGE);
        }        
        else if (!password.equals(confirmpassword)){
            System.out.println(password);
            System.out.println(confirmpassword);
            JOptionPane.showMessageDialog(this, "Password doesn't match!");
        }
        else {
            AccountDirectory ac = new AccountDirectory();
            ac.addUserCredential(email, password, "User");
            new UserDirectory().addNewUserToDB(name, dob, age, gender, contact, address, height, weight, diabetic, allergies, puposeList, preference, workoutFrequency, favorites,  email);
            JOptionPane.showMessageDialog(this, "Account Information Updated");
            resetForm();
        }
            populateTableData();
         
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        resetForm();
        ManageUsersSA frame = new ManageUsersSA();
        frame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtHeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeightKeyTyped
        // TODO add your handling code here:
      char typedAge = evt.getKeyChar();
         if(Character.isAlphabetic(typedAge)){
          evt.consume();
          }
            //Restrict the length to 5 
         if(txtHeight.getText().length() > 5){
              evt.consume();
           }
    }//GEN-LAST:event_txtHeightKeyTyped

    private void txtAllergiesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAllergiesKeyTyped
        // TODO add your handling code here:
        char typedName = evt.getKeyChar();
        if(!Character.isAlphabetic(typedName) && !Character.isWhitespace(typedName)){
            evt.consume();
        }
        //Restrict the length to 256
        if(txtAllergies.getText().length() > 255){
            evt.consume();
        }
    }//GEN-LAST:event_txtAllergiesKeyTyped

    private void txtWeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyTyped
        // TODO add your handling code here:
         char typedWeight = evt.getKeyChar();
         if(Character.isAlphabetic(typedWeight)){
          evt.consume();
          }
            //Restrict the length to 5 
         if(txtWeight.getText().length() > 5){
              evt.consume();
           }
    }//GEN-LAST:event_txtWeightKeyTyped

    private void comboPreferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPreferenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPreferenceActionPerformed

    private void comboWorkoutFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboWorkoutFrequencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboWorkoutFrequencyActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        if (txtAllergies1.getText().isEmpty() || 
            txtHeight1.getText().isEmpty() || 
            txtWeight1.getText().isEmpty() ||
            comboDiabetic1.getSelectedIndex() == -1 ||    
            comboPurpose1.getSelectedIndex() == -1 ||
            comboPreference1.getSelectedIndex() == -1 ||
            comboWorkoutFrequency1.getSelectedIndex() == -1
                
            )
        {
            JOptionPane.showMessageDialog(this,
                    "Please enter all fields",
                    "Try Again",
                    JOptionPane.ERROR_MESSAGE);
            
            
        }
        else{
            int rowIndex = tableView.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tableView.getModel();
    //        User selectedUser =(User)model.getValueAt(rowIndex,1);

            int id = Integer.parseInt(model.getValueAt(rowIndex,0).toString());
            String bp = "";
            float height = Float.parseFloat(txtHeight1.getText());
            float weight = Float.parseFloat(txtWeight1.getText());

            String diab;
            if(comboDiabetic1.getSelectedItem().toString().equals("Yes")){
                    diab="1";                
            }
            else{
                diab= "0";
            }
            String allergies = txtAllergies1.getText();
            String purpose = comboPurpose1.getSelectedItem().toString();
            String preference = comboPreference1.getSelectedItem().toString();
            String workout = comboWorkoutFrequency1.getSelectedItem().toString();
            String favorite = new UtilityFunctions().commaSeparate( listFavorites1.getSelectedValuesList());


            UserDirectory ud = new UserDirectory();
            ud.updateRecordsByID(bp, height, weight, diab, allergies, purpose, preference, workout, favorite, id);

            JOptionPane.showMessageDialog(this, "Account Updated Successfully");
            populateTableData();
            resetUpdateForm();

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        LoginFrame frame = new LoginFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        ManageUsersSA frame = new ManageUsersSA();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        SAHomePage frame = new SAHomePage();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void txtHeight1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeight1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeight1KeyTyped

    private void txtAllergies1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAllergies1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAllergies1KeyTyped

    private void txtWeight1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeight1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeight1KeyTyped

    private void comboPreference1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPreference1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPreference1ActionPerformed

    private void comboWorkoutFrequency1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboWorkoutFrequency1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboWorkoutFrequency1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int rowIndex = tableView.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableView.getModel();
        
        int id = Integer.parseInt(model.getValueAt(rowIndex,0).toString());
        UserDirectory ud = new UserDirectory();
        ud.deleteUserFromDB(id);
        
        populateTableData();
        resetUpdateForm();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableViewMouseClicked
        // TODO add your handling code here:
        int rowIndex = tableView.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableView.getModel();
        
        int id = Integer.parseInt(model.getValueAt(rowIndex,0).toString());
        
        UserDirectory ud = new UserDirectory();
        ResultSet res = ud.selectRecordsByID(id);
        
        try{
            
            
            while(res.next()){
                txtHeight1.setText(String.valueOf(res.getFloat("Height")));
                txtWeight1.setText(String.valueOf(res.getFloat("Weight")));
                txtAllergies1.setText(res.getString("Allergies"));
                
                if (res.getBoolean("Diabetic")){
                    comboDiabetic1.setSelectedItem("Yes");
                }
                else{
                    comboDiabetic1.setSelectedItem("No");
                }
                
                comboWorkoutFrequency1.setSelectedItem(res.getString("Workout_Frequency"));
                comboPreference1.setSelectedItem(res.getString("Food_Preference"));
                int[] indices = {0, 2, 3};
//                listFavorites1.setSelectedIndices(indices);
                listFavorites1.setSelectedValue(new UtilityFunctions().covertToList( res.getString("Favorites")), true);
                listFavorites1.setSelectionBackground(Color.lightGray);
//                listFavorites1.setSelectedValueList(new UtilityFunctions().covertToList( res.getString("Favorites")), true);
                comboPurpose1.setSelectedItem(res.getString("Purpose"));
            }
            System.out.println(res);
            
//            tableView.setModel(DbUtils.resultSetToTableModel(res));
        }
        catch(SQLException ex){
            Logger.getLogger(ManageUsersSA.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_tableViewMouseClicked

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        // TODO add your handling code here:
        jLabel3.setForeground(Color.red);
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        // TODO add your handling code here:
        jLabel3.setForeground(Color.white);
    }//GEN-LAST:event_jLabel3MouseExited

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        // TODO add your handling code here:
        char typedName = evt.getKeyChar();
        if(!Character.isAlphabetic(typedName) && !Character.isWhitespace(typedName)){
            evt.consume();
        }
        //Restrict the length to 256
        if(txtName.getText().length() > 255){
            evt.consume();
        }
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactActionPerformed

    private void txtContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyTyped
        // TODO add your handling code here:
        char typedPhoneNumber = evt.getKeyChar();
        if(!Character.isDigit(typedPhoneNumber)){
            evt.consume();
        }
        //Restrict the length to 10
        if(txtContact.getText().length() > 9){
            evt.consume();
        }
    }//GEN-LAST:event_txtContactKeyTyped

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyTyped


    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        // TODO add your handling code here:
        ManageDietitiansSA frame = new ManageDietitiansSA();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel13MouseClicked

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    
    boolean isDataValid(){
//        String id, name, emailId, gender, community, city, state, username ;
//        String houseNumber, zipCode, age, bloodGroup, height, weight;
//        String contactDetails;
     //  String emailID = txtEmail.getText();
////        Date dob;
//        //String patternEmail = "^[A-Za-z0-9+_.-]+@(.+)$";
     //  String patternEmail = "^[(a-zA-Z-0-9-\\_\\+\\.)]+@[(a-z-A-z)]+\\.[(a-zA-z)]{2,3}$";
//        String bmi = "[(0-9\\.)]{2,}$";
//               
//        id = txtDoctorID.getText();
//        name = txtName.getText();
//        emailId = txtEmail.getText();
//        contactDetails = txtContact.getText();
//        age = txtAge.getText();
////        dob = DOBtxt.getDate();
//        if(comboPurpose.getSelectedItem() == null){
//            houseNumber = "";
//        }
//        else{
//            houseNumber = comboPurpose.getSelectedItem().toString();
//        }
//        
//        
//        if(comboCommunity.getSelectedItem() == null){
//            community = "";
//        }
//        else{
//            community = comboCommunity.getSelectedItem().toString();
//        }
//        
//        
//        if(comboCity.getSelectedItem() == null){
//            city = "";
//        }
//        else{
//            city = comboCity.getSelectedItem().toString();
//        }
//        state = txtState.getText();
//        zipCode = txtZipCode.getText();
//        //bloodGroup = (String) patientBloodGroupTxt.getSelectedItem();
//        String qualification = txtQualification.getText();
//        String specialization = txtSpecialization.getText();
//        String slots = txtHeight.getText();
//        String password = new String(txtPassword.getText());
//        String rePassword = new String(txtPassword2.getPassword());
//        
//        
//       
//        if(comboGender.getSelectedItem() == null){
//            gender = "";
//        }
//        else{
//            gender = comboGender.getSelectedItem().toString(); 
//        }
//        
//        String hospital;
//        if(comboBloodGroup.getSelectedItem() == null){
//            hospital = "";
//        }
//        else{
//            hospital = comboBloodGroup.getSelectedItem().toString(); 
//        }
//        
//        
//        if (id.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter Patient ID");
//            return false;
//        }
//       
//        if (name.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter name");
//            return false;
//        }
//        
//        if (gender.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please select gender");
//            return false;
//        }
//        
//        if (hospital.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please select hospital");
//            return false;
//        }
//        
//        if (contactDetails.equals("") || !(txtContact.getText().length()==10))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter valid contact Number");
//            txtContact.setText("");
//           
//            return false;
//        }
//        //emailIDTxt.getText().isBlank() &&
    //    if( !emailID.matches(patternEmail)){
       //         JOptionPane.showMessageDialog(this, "Please enter a valid Email.");
       //         txtEmail.setText("");
       //         return false;
         //   }
//       
//        if (age.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter age");
//            return false;
//        }
//       
//        if (slots.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter number of slots available");
//            return false;
//        }
//        
//        if (qualification.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter qualification");
//            return false;
//        }
//        if (specialization.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter specialization");
//            return false;
//        }
       
       
//        if (zipCode.equals("") || !(txtZipCode.getText().length()==5))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter zipCode");
//            txtZipCode.setText("");
//            return false;
//        }
//       
//   
//       
//        if (password.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter password");
//            return false;
//        }
//       
//        if (rePassword.equals(""))
//        {
//            JOptionPane.showMessageDialog(this, "Please enter rePassword");
//            return false;
//        }
//       
//        if (!(password).equals(rePassword)){
//            JOptionPane.showMessageDialog(this, "Password doesn't match");
//            return false;
//        }
       
        return true;
       
    }
    
    private void populateTableData() {
        
        //Type-cast table model into default table model
        DefaultTableModel model = (DefaultTableModel) tableView.getModel();
        
        sorter = new TableRowSorter<>(model);

        tableView.setRowSorter(sorter);
        model.setRowCount(0);
        
        UserDirectory ud = new UserDirectory();
        ResultSet res = ud.selectAllRecords();
        
        try{
            
            while(res.next()){
                Object[] row = new Object[10];
                row[0] = res.getInt("UserID");
                row[1] = res.getString("Name");
                row[2] = res.getString("Gender");
                row[3] = res.getInt("Age");
                row[4] = res.getLong("Contact");
                row[5] = res.getString("Address");
                row[6] = res.getFloat("Height");
                row[7] = res.getFloat("Weight");
                row[8] = res.getBoolean("Diabetic");
                row[9] = res.getString("Allergies");
                
                model.addRow(row);
            }
            System.out.println(res);
            
        }
        catch(SQLException ex){
            Logger.getLogger(ManageUsersSA.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      //--------------
        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
         @Override
         public void insertUpdate(DocumentEvent e) {
            search(txtSearch.getText());
         }
         @Override
         public void removeUpdate(DocumentEvent e) {
            search(txtSearch.getText());
         }
         @Override
         public void changedUpdate(DocumentEvent e) {
            search(txtSearch.getText());
         }
         public void search(String str) {
            if (str.length() == 0) {
               sorter.setRowFilter(null);
            } else {
               sorter.setRowFilter(RowFilter.regexFilter(str));
            }
         }
      });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUsersSA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup btnGroupDiabetes;
    private javax.swing.ButtonGroup btnGroupGender;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboDiabetic;
    private javax.swing.JComboBox<String> comboDiabetic1;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JComboBox<String> comboPreference;
    private javax.swing.JComboBox<String> comboPreference1;
    private javax.swing.JComboBox<String> comboPurpose;
    private javax.swing.JComboBox<String> comboPurpose1;
    private javax.swing.JComboBox<String> comboWorkoutFrequency;
    private javax.swing.JComboBox<String> comboWorkoutFrequency1;
    private com.toedter.calendar.JDateChooser dateDOB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAllergies;
    private javax.swing.JLabel lblAllergies1;
    private javax.swing.JLabel lblAllergies2;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblDiabetes;
    private javax.swing.JLabel lblDiabetes1;
    private javax.swing.JLabel lblDiabetes2;
    private javax.swing.JLabel lblFavFood;
    private javax.swing.JLabel lblFavFood2;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHeight1;
    private javax.swing.JLabel lblHeight2;
    private javax.swing.JLabel lblPreference;
    private javax.swing.JLabel lblPreference2;
    private javax.swing.JLabel lblPurpose;
    private javax.swing.JLabel lblPurpose1;
    private javax.swing.JLabel lblService;
    private javax.swing.JLabel lblStore;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWeight1;
    private javax.swing.JLabel lblWeight2;
    private javax.swing.JLabel lblWorkoutFrequency;
    private javax.swing.JLabel lblWorkoutFrequency2;
    private javax.swing.JList<String> listFavorites;
    private javax.swing.JList<String> listFavorites1;
    private javax.swing.JPanel panelDiet;
    private javax.swing.JPanel panelDiet1;
    private javax.swing.JPanel panelDietUpdate;
    private javax.swing.JPanel panelMedical;
    private javax.swing.JPanel panelMedical1;
    private javax.swing.JPanel panelMedicalUpdate;
    private javax.swing.JPanel pnlRegistration;
    private javax.swing.JPanel pnlSideOptions;
    private javax.swing.JPanel pnlTitleBar;
    private javax.swing.JPanel pnlView;
    private javax.swing.JPanel pnlWorkArea;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JPasswordField pwdRePassword;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tableView;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAllergies;
    private javax.swing.JTextField txtAllergies1;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtHeight1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtWeight;
    private javax.swing.JTextField txtWeight1;
    // End of variables declaration//GEN-END:variables
}
